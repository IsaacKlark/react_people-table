{"version":3,"sources":["Person.js","PeopleTable.js","UnityComponent.js","App.js","index.js"],"names":["Person","_ref","person","index","personInURL","century","Math","ceil","died","location","useLocation","history","useHistory","react_default","a","createElement","className","sex","concat","id","name","toLowerCase","data-earlyborn","born","onClick","addStringToURL","split","join","pathname","replace","mother","father","data-greenlive","PeopleTable","people","_useState","useState","setSelectedPerson","Object","slicedToArray","_useState3","_useState4","setPersonInURL","changeSelected","personFromURL","match","_personFromURL","_personFromURL3","map","react","key","src_Person","propType","PropTypes","arrayOf","any","isRequired","UnityComponent","_useState2","peopleAmount","setPeopleAmount","isLoading","setIsLoading","_useState5","_useState6","setPeople","_useState7","_useState8","peopleList","setPeopleList","_useState9","_useState10","query","setQuery","searchParams","URLSearchParams","search","searchParams2","nameFromUrl","toString","findPerson","fetch","then","listOfPeople","json","list","length","objectSpread2","filteredPeople","filter","includes","set","push","inputText","f","delay","timer","_len","arguments","args","Array","_key","clearTimeout","setTimeout","apply","debounce","type","placeholder","onChange","e","target","value","sortedPeople","toConsumableArray","sort","person1","person2","localeCompare","src_PeopleTable","App","react_router_dom","to","exact","activeClassName","react_router","path","component","ReactDOM","render","src_App","test","document","getElementById"],"mappings":"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","file":"static/js/main.336d8581.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\n\nconst Person = ({\n  person,\n  index,\n  personInURL,\n}) => {\n  const century = (Math.ceil(person.died / 100));\n  const location = useLocation();\n  const history = useHistory();\n\n  const personSelected = () => {\n    const addStringToURL = `/people/${\n      person.name.toLowerCase().split(' ').join('-')}`;\n\n    location.pathname = addStringToURL;\n    history.location.pathname = addStringToURL;\n    history.replace(location.pathname, addStringToURL);\n  };\n\n  return (\n    <tr\n      className={person.sex === 'm'\n        ? `tr Person--male\n          Person--lived-in-${century}\n        `\n        : `tr Person--female\n          Person--lived-in-${century}\n        `}\n\n      id={person.name.toLowerCase() === personInURL\n        ? 'Person--selected'\n        : person.name}\n      data-earlyborn={person.born < 1650 ? 'earlyBorn' : ''}\n      onClick={personSelected}\n    >\n      <td className={index % 2 === 0 ? 'body__td' : 'body__td-light'}>\n        {person.id}\n      </td>\n      <td className={index % 2 === 0 ? 'body__td' : 'body__td-light'}>\n        {person.name}\n      </td>\n      <td className={index % 2 === 0 ? 'body__td' : 'body__td-light'}>\n        {person.sex}\n      </td>\n      <td className={index % 2 === 0 ? 'body__td' : 'body__td-light'}>\n        {person.born}\n      </td>\n      <td className={index % 2 === 0 ? 'body__td' : 'body__td-light'}>\n        {person.died}\n      </td>\n      <td className={index % 2 === 0 ? 'body__td' : 'body__td-light'}>\n        {person.mother}\n      </td>\n      <td className={index % 2 === 0 ? 'body__td' : 'body__td-light'}>\n        {person.father}\n      </td>\n      <td\n        className={index % 2 === 0 ? 'body__td' : 'body__td-light'}\n        data-greenlive={person.died - person.born >= 65 ? 'greenLive' : ''}\n      >\n        {person.died - person.born}\n      </td>\n      <td className={index % 2 === 0 ? 'body__td' : 'body__td-light'}>\n        {century}\n      </td>\n    </tr>\n  );\n};\n\nPerson.propTypes = {\n  person: PropTypes.objectOf(PropTypes.any).isRequired,\n  index: PropTypes.number.isRequired,\n  personInURL: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default Person;\n","import PropTypes from 'prop-types';\nimport React, { Fragment, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Person from './Person';\n\nconst PeopleTable = (people) => {\n  const [setSelectedPerson] = useState('Person--selected');\n  const [personInURL, setPersonInURL] = useState(null);\n\n  const changeSelected = (name) => {\n    setSelectedPerson(name);\n  };\n\n  const location = useLocation();\n  let personFromURL = location.pathname.match(/(people\\/.+(?=\\/|:|\\?|\\b))/g);\n\n  if (personFromURL) {\n    const [stringFromUrl] = personFromURL;\n\n    personFromURL = stringFromUrl.split('/');\n    const [, personFromString] = personFromURL;\n\n    personFromURL = personFromString.split('-').join(' ');\n  }\n\n  if ((!personInURL && personFromURL) || personInURL !== personFromURL) {\n    setPersonInURL(personFromURL);\n  }\n\n  return (\n    <table className=\"people__table\">\n      <thead className=\"table__head\">\n        <tr>\n          <td className=\"head__td\">id</td>\n          <td className=\"head__td\">name</td>\n          <td className=\"head__td\">sex</td>\n          <td className=\"head__td\">born</td>\n          <td className=\"head__td\">died</td>\n          <td className=\"head__td\">mother</td>\n          <td className=\"head__td\">father</td>\n          <td className=\"head__td\">age</td>\n          <td className=\"head__td\">century</td>\n\n        </tr>\n      </thead>\n      <tbody>\n        {\n          people.map((person, index) => (\n            <Fragment key={person.name}>\n              <Person\n                person={person}\n                index={index}\n                changeSelected={changeSelected}\n                personInURL={personInURL}\n              />\n            </Fragment>\n          ))\n        }\n      </tbody>\n    </table>\n  );\n};\n\nPeopleTable.propType = {\n  people: PropTypes.arrayOf(PropTypes.any).isRequired,\n};\n\nexport default PeopleTable;\n","import React, { useState } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport PeopleTable from './PeopleTable';\n\nconst url = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nconst UnityComponent = () => {\n  const [peopleAmount, setPeopleAmount] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [people, setPeople] = useState([]);\n  const [peopleList, setPeopleList] = useState([]);\n  const [query, setQuery] = useState(null);\n\n  const location = useLocation();\n  const history = useHistory();\n  const searchParams = new URLSearchParams(location.search);\n  const searchParams2 = new URLSearchParams(location.search);\n\n  let nameFromUrl = location.search.toString()\n    .match(/(query)=.+(?=\\/|\\?|:|&|\\b)/g);\n\n  if (nameFromUrl) {\n    nameFromUrl = nameFromUrl[0].split('=')[1].split('+').join(' ');\n  }\n\n  if (nameFromUrl && nameFromUrl !== query) {\n    setQuery(nameFromUrl);\n    findPerson(nameFromUrl);\n  }\n\n  if (isLoading) {\n    fetch(url).then(listOfPeople => listOfPeople.json())\n      .then((list) => {\n        setPeopleAmount(list.length);\n        setPeople(list.map((person, index) => ({\n          ...person,\n          id: index,\n        })));\n        setPeopleList(list.map((person, index) => ({\n          ...person,\n          id: index,\n        })));\n        setIsLoading(false);\n      });\n  }\n\n  const debounce = (f, delay) => {\n    let timer;\n\n    return (...args) => {\n      clearTimeout(timer);\n      timer = setTimeout(() => {\n        f(...args);\n      }, delay);\n    };\n  };\n\n  function findPerson(name) {\n    const filteredPeople = people.filter((person) => {\n      const mother = person.mother === null ? '' : person.mother;\n      const father = person.father === null ? '' : person.father;\n\n      return (\n        mother.toLowerCase().includes(name.toLowerCase())\n        || person.name.toLowerCase().includes(name.toLowerCase())\n        || father.toLowerCase().includes(name.toLowerCase())\n      );\n    });\n\n    setPeopleList(filteredPeople);\n    setPeopleAmount(filteredPeople.length);\n\n    if (name.length > 0) {\n      searchParams.set('query', name);\n      history.push({ search: searchParams.toString() });\n    } else {\n      history.push({ search: null });\n    }\n  }\n\n  const inputText = debounce(findPerson, 1000);\n\n  const sortByName = () => {\n    const sortedPeople = [\n      ...peopleList.sort((person1, person2) => (\n        person1.name.localeCompare(person2.name))),\n    ];\n\n    setPeopleList(sortedPeople);\n    searchParams2.set('sortBy', 'name');\n    history.push({ search: searchParams2.toString() });\n  };\n\n  const sortById = () => {\n    const sortedPeople = [\n      ...peopleList.sort((person1, person2) => (\n        person1.id - person2.id)),\n    ];\n\n    setPeopleList(sortedPeople);\n    searchParams2.set('sortBy', 'id');\n    history.push({ search: searchParams2.toString() });\n  };\n\n  const sortBySex = () => {\n    const sortedPeople = [\n      ...peopleList.sort((person1, person2) => (\n        person1.sex.localeCompare(person2.sex))),\n    ];\n\n    setPeopleList(sortedPeople);\n    searchParams2.set('sortBy', 'sex');\n    history.push({ search: searchParams2.toString() });\n  };\n\n  const sortByBorn = () => {\n    const sortedPeople = [\n      ...peopleList.sort((person1, person2) => (\n        person1.born - person2.born)),\n    ];\n\n    setPeopleList(sortedPeople);\n    searchParams2.set('sortBy', 'born');\n    history.push({ search: searchParams2.toString() });\n  };\n\n  const sortByDied = () => {\n    const sortedPeople = [\n      ...peopleList.sort((person1, person2) => (\n        person1.died - person2.died)),\n    ];\n\n    setPeopleList(sortedPeople);\n    searchParams2.set('sortBy', 'died');\n    history.push({ search: searchParams2.toString() });\n  };\n\n  const sortByAge = () => {\n    const sortedPeople = [\n      ...peopleList.sort((person1, person2) => (\n        person1.died - person1.born) - (person2.died - person2.born)),\n    ];\n\n    setPeopleList(sortedPeople);\n    searchParams2.set('sortBy', 'age');\n    history.push({ search: searchParams2.toString() });\n  };\n\n  const sortByCentury = () => {\n    const sortedPeople = [\n      ...peopleList.sort((person1, person2) => (\n        (Math.ceil(person1.died / 100)))\n          - ((Math.ceil(person2.died / 100)))),\n    ];\n\n    setPeopleList(sortedPeople);\n    searchParams2.set('sortBy', 'century');\n    history.push({ search: searchParams2.toString() });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"people__h1\">\n        {\n          isLoading ? '...Loading' : `${peopleAmount} persons found`\n        }\n      </h1>\n      {\n        isLoading\n          ? ''\n          : (\n            <div className=\"people__forms\">\n              <nav>\n                <input\n                  type=\"text\"\n                  name=\"search\"\n                  placeholder=\"find\"\n                  onChange={(e) => {\n                    inputText(e.target.value);\n                  }}\n                />\n                <button\n                  type=\"button\"\n                  onClick={sortByName}\n                  className=\"sort__button\"\n                >\n                  sort by name\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={sortById}\n                  className=\"sort__button\"\n                >\n                  sort by id\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={sortBySex}\n                  className=\"sort__button\"\n                >\n                  sort by sex\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={sortByBorn}\n                  className=\"sort__button\"\n                >\n                  sort by born\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={sortByDied}\n                  className=\"sort__button\"\n                >\n                  sort by died\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={sortByAge}\n                  className=\"sort__button\"\n                >\n                  sort by age\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={sortByCentury}\n                  className=\"sort__button\"\n                >\n              sort by century\n                </button>\n              </nav>\n              <PeopleTable people={peopleList} />\n            </div>\n          )\n      }\n    </div>\n  );\n};\n\nexport default UnityComponent;\n","import React from 'react';\nimport { HashRouter, Route, NavLink } from 'react-router-dom';\nimport UnityComponent from './UnityComponent';\n\nconst App = () => (\n  <HashRouter>\n    <div className=\"App\">\n      <NavLink\n        to=\"/\"\n        exact\n        className=\"link\"\n        activeClassName=\"active__link\"\n      >\n        Home\n      </NavLink>\n      <NavLink\n        to=\"/people\"\n        exact\n        className=\"link\"\n        activeClassName=\"active__link\"\n      >\n        people list\n      </NavLink>\n      <Route path=\"/people\" component={UnityComponent} />\n    </div>\n  </HashRouter>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}