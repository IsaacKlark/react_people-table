{"version":3,"sources":["Person.js","PeopleTable.js","Main.js","App.js","index.js"],"names":["Person","_ref","person","personInURL","index","century","Math","ceil","died","location","useLocation","history","useHistory","react_default","a","createElement","className","cn","tr","Person--male","sex","Person--female","Person--selected","name","toLowerCase","earlyBorn","born","onClick","addStringToURL","concat","split","join","pathname","replace","id","mother","father","greenLive","PeopleTable","peopleList","_useState","useState","setSelectedPerson","Object","slicedToArray","_useState3","_useState4","setPersonInURL","changeSelected","personFromURL","match","_personFromURL","_personFromURL3","map","react","key","src_Person","Main","_useState2","peopleAmount","setPeopleAmount","isLoading","setIsLoading","_useState5","_useState6","people","setPeople","_useState7","_useState8","setPeopleList","_useState9","_useState10","query","setQuery","_useState11","_useState12","sortBy","setSortBy","searchParams","URLSearchParams","search","nameFromUrl","get","sortByFromUrl","findPerson","sort","fetch","then","listOfPeople","json","list","length","objectSpread2","filteredPeople","filter","includes","set","push","toString","inputText","f","delay","timer","_len","arguments","args","Array","_key","clearTimeout","setTimeout","apply","debounce","e","sortedPeople","target","value","toConsumableArray","person1","person2","localeCompare","type","placeholder","onChange","tagName","src_PeopleTable","App","react_router_dom","to","exact","activeClassName","react_router","path","component","ReactDOM","render","src_App","test","document","getElementById"],"mappings":"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","file":"static/js/main.f9e389b5.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport cn from 'classnames';\n\nconst Person = ({\n  person,\n  index,\n  personInURL,\n}) => {\n  const century = (Math.ceil(person.died / 100));\n  const location = useLocation();\n  const history = useHistory();\n\n  const personSelected = () => {\n    const addStringToURL = `/people/${\n      person.name.toLowerCase().split(' ').join('-')}`;\n\n    location.pathname = addStringToURL;\n    history.location.pathname = addStringToURL;\n    history.replace(location.pathname, addStringToURL);\n  };\n\n  return (\n    <tr\n      className={\n        cn({\n          tr: true,\n          'Person--male': person.sex === 'm',\n          'Person--female': person.sex === 'f',\n          'Person--selected': person.name.toLowerCase() === personInURL,\n          earlyBorn: person.born < 1650,\n        })\n      }\n\n      onClick={personSelected}\n    >\n      <td>\n        {person.id}\n      </td>\n      <td>\n        {person.name}\n      </td>\n      <td>\n        {person.sex}\n      </td>\n      <td>\n        {person.born}\n      </td>\n      <td>\n        {person.died}\n      </td>\n      <td>\n        {person.mother}\n      </td>\n      <td>\n        {person.father}\n      </td>\n      <td\n        className={\n          cn({\n            greenLive: person.died - person.born >= 65,\n          })\n        }\n      >\n        {person.died - person.born}\n      </td>\n      <td>\n        {century}\n      </td>\n    </tr>\n  );\n};\n\nPerson.propTypes = {\n  person: PropTypes.objectOf(PropTypes.any).isRequired,\n  index: PropTypes.number.isRequired,\n  personInURL: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default Person;\n","import PropTypes from 'prop-types';\nimport React, { Fragment, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Person from './Person';\n\nconst PeopleTable = ({ peopleList }) => {\n  const [setSelectedPerson] = useState('Person--selected');\n  const [personInURL, setPersonInURL] = useState(null);\n\n  const changeSelected = (name) => {\n    setSelectedPerson(name);\n  };\n\n  const location = useLocation();\n  let personFromURL = location.pathname.match(/(people\\/.+(?=\\/|:|\\?|\\b))/g);\n\n  if (personFromURL) {\n    const [stringFromUrl] = personFromURL;\n\n    personFromURL = stringFromUrl.split('/');\n    const [, personFromString] = personFromURL;\n\n    personFromURL = personFromString.split('-').join(' ');\n  }\n\n  if ((!personInURL && personFromURL) || personInURL !== personFromURL) {\n    setPersonInURL(personFromURL);\n  }\n\n  return (\n    <table className=\"people__table\">\n      <thead className=\"table__head\">\n        <tr>\n          <td>id</td>\n          <td>name</td>\n          <td>sex</td>\n          <td>born</td>\n          <td>died</td>\n          <td>mother</td>\n          <td>father</td>\n          <td>age</td>\n          <td>century</td>\n\n        </tr>\n      </thead>\n      <tbody>\n        {\n          peopleList.map((person, index) => (\n            <Fragment key={person.name}>\n              <Person\n                person={person}\n                index={index}\n                changeSelected={changeSelected}\n                personInURL={personInURL}\n              />\n            </Fragment>\n          ))\n        }\n      </tbody>\n    </table>\n  );\n};\n\nPeopleTable.propTypes = {\n  peopleList: PropTypes.arrayOf(PropTypes.any).isRequired,\n};\n\nexport default PeopleTable;\n","import React, { useState } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport PeopleTable from './PeopleTable';\n\nconst url = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nconst Main = () => {\n  const [peopleAmount, setPeopleAmount] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [people, setPeople] = useState([]);\n  const [peopleList, setPeopleList] = useState([]);\n  const [query, setQuery] = useState(null);\n  const [sortBy, setSortBy] = useState(null);\n\n  const location = useLocation();\n  const history = useHistory();\n  const searchParams = new URLSearchParams(location.search);\n  const sortTags = ['name', 'id', 'sex', 'born', 'died', 'age', 'century'];\n  const nameFromUrl = searchParams.get('query');\n  const sortByFromUrl = searchParams.get('sortBy');\n\n  if (nameFromUrl && nameFromUrl !== query) {\n    setQuery(nameFromUrl);\n    findPerson(nameFromUrl);\n  }\n\n  if (sortByFromUrl && sortByFromUrl !== sortBy) {\n    setSortBy(sortByFromUrl);\n    sort(sortByFromUrl);\n  }\n\n  if (isLoading) {\n    fetch(url).then(listOfPeople => listOfPeople.json())\n      .then((list) => {\n        setPeopleAmount(list.length);\n        setPeople(list.map((person, index) => ({\n          ...person,\n          id: index,\n        })));\n        setPeopleList(list.map((person, index) => ({\n          ...person,\n          id: index,\n        })));\n        setIsLoading(false);\n      });\n  }\n\n  const debounce = (f, delay) => {\n    let timer;\n\n    return (...args) => {\n      clearTimeout(timer);\n      timer = setTimeout(() => {\n        f(...args);\n      }, delay);\n    };\n  };\n\n  function findPerson(name) {\n    const filteredPeople = people.filter((person) => {\n      const mother = person.mother === null ? '' : person.mother;\n      const father = person.father === null ? '' : person.father;\n\n      return (\n        mother.toLowerCase().includes(name.toLowerCase())\n        || person.name.toLowerCase().includes(name.toLowerCase())\n        || father.toLowerCase().includes(name.toLowerCase())\n      );\n    });\n\n    setPeopleList(filteredPeople);\n    setPeopleAmount(filteredPeople.length);\n\n    if (name.length > 0) {\n      searchParams.set('query', name);\n      history.push({ search: searchParams.toString() });\n    } else {\n      history.push({ search: null });\n    }\n  }\n\n  const inputText = debounce(findPerson, 1000);\n\n  function sort(e) {\n    let sortedPeople = [];\n    const sortName = typeof (e) === 'string' ? e : e.target.value;\n\n    switch (sortName) {\n      case 'name':\n        sortedPeople = [\n          ...peopleList.sort((person1, person2) => (\n            person1.name.localeCompare(person2.name))),\n        ];\n\n        searchParams.set('sortBy', 'name');\n        break;\n\n      case 'id':\n        sortedPeople = [\n          ...peopleList.sort((person1, person2) => (\n            person1.id - person2.id)),\n        ];\n\n        searchParams.set('sortBy', 'id');\n        break;\n\n      case 'sex':\n        sortedPeople = [\n          ...peopleList.sort((person1, person2) => (\n            person1.sex.localeCompare(person2.sex))),\n        ];\n\n        searchParams.set('sortBy', 'sex');\n        break;\n\n      case 'born':\n        sortedPeople = [\n          ...peopleList.sort((person1, person2) => (\n            person1.born - person2.born)),\n        ];\n\n        searchParams.set('sortBy', 'born');\n        break;\n\n      case 'died':\n        sortedPeople = [\n          ...peopleList.sort((person1, person2) => (\n            person1.died - person2.died)),\n        ];\n\n        searchParams.set('sortBy', 'died');\n        break;\n\n      case 'age':\n        sortedPeople = [\n          ...peopleList.sort((person1, person2) => (\n            person1.died - person1.born) - (person2.died - person2.born)),\n        ];\n\n        searchParams.set('sortBy', 'age');\n        break;\n\n      case 'century':\n        sortedPeople = [\n          ...peopleList.sort((person1, person2) => (\n            (Math.ceil(person1.died / 100)))\n              - ((Math.ceil(person2.died / 100)))),\n        ];\n\n        searchParams.set('sortBy', 'century');\n        break;\n\n      default:\n        break;\n    }\n\n    setPeopleList(sortedPeople);\n    history.push({ search: searchParams.toString() });\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"people__h1\">\n        {\n          isLoading ? '...Loading' : `${peopleAmount} persons found`\n        }\n      </h1>\n      {\n        isLoading\n          ? ''\n          : (\n            <div className=\"people__forms\">\n              <nav>\n                <input\n                  type=\"text\"\n                  name=\"search\"\n                  placeholder=\"find\"\n                  onChange={(e) => {\n                    inputText(e.target.value);\n                  }}\n                />\n                {\n                  sortTags.map(tagName => (\n                    <button\n                      type=\"button\"\n                      onClick={sort}\n                      className=\"sort__button\"\n                      value={tagName}\n                      key={tagName}\n                    >\n                      sort by\n                      {' '}\n                      {tagName}\n                    </button>\n                  ))\n                }\n              </nav>\n              <PeopleTable\n                peopleList={peopleList}\n              />\n            </div>\n          )\n      }\n    </div>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport { HashRouter, Route, NavLink } from 'react-router-dom';\nimport Main from './Main';\n\nconst App = () => (\n  <HashRouter>\n    <div className=\"App\">\n      <NavLink\n        to=\"/\"\n        exact\n        className=\"link\"\n        activeClassName=\"active__link\"\n      >\n        Home\n      </NavLink>\n      <NavLink\n        to=\"/people\"\n        exact\n        className=\"link\"\n        activeClassName=\"active__link\"\n      >\n        people list\n      </NavLink>\n      <Route path=\"/people\" component={Main} />\n    </div>\n  </HashRouter>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}